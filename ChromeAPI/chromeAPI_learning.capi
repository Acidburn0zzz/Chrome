add [file]
--------------------------------------------
--------------------------------------------

-->

--------------------------------------------
--------------------------------------------


https://developer.chrome.com/apps/first_app

this is your first packed app unlike your first extension



                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''

used to divide everything for now



Create your first app

The manifest tells Chrome about your app, what it is, how to launch it and the extra permissions that it requires.


The background script is used to create the event page responsible for managing the app life cycle.
All code must be included in the Chrome App package. This includes HTML, JS, CSS and Native Client modules.
All icons and other assets must be included in the package as well.


    folder: helloWorldApp

just load unpacked and use it
here you have access to the filesystem, now you need it to communicate with the ultraObject which may come as an extension, but first lets access the desried folder

https://developer.chrome.com/apps/fileSystem




                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YthebbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


what chrome apps really look like

you have the app container a GUI
the programming model represents interaction, without the reoruces of a network connection or a browser

it goes like this
    installation, user chooses to explicitly install the app
    startup - how thhe window is lanucned, here you controll communication between other apps
    termination- user can terminiate data anytime, stashing data protects against data laoss
    update - at any time but do not change runtime application in realtime
    uninistalled - no executed code or private data is left behind
    


Security Model
    they want the programmer to code in a secure manner
    they use process isolation, every resource needed for a provess to do is job is given an isolated one
    you can use the object tag to embed extenal content
    



                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YthebbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Chrome App Lifecycle


this controls how the app acts

when the event hs no executing js, window, or callbacks the runtime unloads the event page and closes the app


    Create event page and windows
        every app needs one

ex:
 
"background": {
  "scripts": [
    "foo.js",
    "background.js"
  ]
}


background.js
chrome.app.runtime.onLaunched.addListener(function() {
  // Tell your app what to launch and how.
});



Create windows#

    the event  page can mmake one or more windows

chrome.app.runtime.onLaunched.addListener(function() {
    chrome.app.window.create('main.html', {
        id: 'MyWindowID',
        bounds: {
            width: 800,
            height: 600,
            left: 100,
            top: 100
        },
        minWidth: 800,
        minHeight: 600
    });
});

sometimes you need to handle launch dates



Listening for app runtime event

    you dont need to set this up but its important you use it
    
        Storing local settings#
        chrome.runtime.onInstalled() is called when your app has first been installed, or when it has been updated

        chrome.runtime.onInstalled.addListener(function() {
          chrome.storage.local.set(object items, function callback);
        });

        
        Preventing data loss#
        try to save important data


        Clean-up before app closes
        save it periodically since you can lose its state



Content Security Policy

    What is the CSP for Chrome Apps?

    You can’t use inline scripting in your Chrome App pages. The restriction bans both <script> blocks and event handlers (<button onclick="...">).
    You can’t reference any external resources in any of your app files (except for video and audio resources). You can’t embed external resources in an iframe.
    You can’t use string-to-JavaScript methods like eval() and new Function().
    


    How to comply with CSP
    all js resources should be local

        use precomplied libraries, if not precompiled you have work to do, sandbox cannot interact with chrome API
        to

        You can fetch remote resources via XMLHttpRequest and serve them via blob:, data:, or filesystem: URLs (see Referencing external resources).
        https://developer.chrome.com/apps/app_external#external
        chrome trust media externals because the securiy there is very good

        you can use a webframe instead of an embed tag
        https://developer.chrome.com/apps/app_external#webview




                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''
build a todo chrome App



Create and Run a Chrome App

folder toDoApp html
you need that manifest, background.js and html file to do it



                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Import an existing web app


How to adapt an existing web application for the Chrome Apps platform.
How to make your app scripts Content Security Policy (CSP) compliant.
How to implement local storage using the chrome.storage.local.

folder todomvc

the app we have in todomvc is non CSR coomplinant to make it complinant

add  index.html
----------------------------------------
<script>
  // Bootstrap app data
  window.app = {};
</script>
----------------------------------------

-->

----------------------------------------
//<script>
  // Bootstrap app data
  //window.app = {};
//</script>
[anadir] <script src="js/bootstrap.js"></script>
----------------------------------------

and move the inline script to bootstrap.js




Convert localStorage to chrome.storage.local

    localStroange is sync i/o chrome apps dont like this
    use chrome.storage.local, refer to
    background1.js (put in place of the other files in reference)


using chrome.stroage.local

    to use set

        var storage = {};
        storage[dbName] = { todos: [] };
        chrome.storage.local.set( storage, function(storage) {
            var todos = storage[dbName].todos;
        });

        also want to use the store
        also want to use bind so you can proeprly reference objects


folder todomvc





                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


add alarms and notifications

you need to remind your user of things

files:background2.js
        manifest.json
      index2.html
    js/alarms.js


    add manifest.json
    --------------------------------------------
    "permissions": ["storage"]
    --------------------------------------------
    
    -->
    
    --------------------------------------------
    "permissions": ["storage", "alarms"]
    --------------------------------------------
    
    
    add background.js
    chrome.alarms.onAlarm.addListener(function( alarm ) {
      console.log("Got an alarm!", alarm);
    });

    
    add  background2.js
    --------------------------------------------
    --------------------------------------------
    
    -->
    
    --------------------------------------------
    [anadir]
    chrome.alarms.onAlarm.addListener(function( alarm ) {
      console.log("Got an alarm!", alarm);
    });
    --------------------------------------------


    add index2.html
    --------------------------------------------
      <footer id="info">
        <p>Double-click to edit a todo</p>
        <p>Created by <a href="http://twitter.com/oscargodson">Oscar Godson</a></p>
    
    @#@#
    --------------------------------------------
    
    -->
    
    
    --------------------------------------------
      <footer id="info">
        <p>Double-click to edit a todo</p>
        <p>Created by <a href="http://twitter.com/oscargodson">Oscar Godson</a></p>
        [anadir] <button id="toggleAlarm">Activate alarm</button>
    
    @#@#
    
    [anadir] <script src="js/alarms.js"></script>
    --------------------------------------------

and thre you go


Add notifications
    
    files: background3.js
            index3.html
            downloaded from site
    


    add manifest.json
    --------------------------------------------
    "permissions": ["storage", "alarms"]
    --------------------------------------------
    
    -->
    


                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Open External Links With a Webview


sometimes you have to show stuff from the web with all its styling but keep them in the application
this is called a webview



didnt save the data just refer to
https://developer.chrome.com/apps/app_codelab_webview or it should work out




                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Add Images From the Web


How to load resources from outside your app and add them to the DOM through XHR and ObjectURLs.

to load an image -  XMLHttpRequest, transform it into a Blob, and create an ObjectURL


Update permissions
    
    to make XHR you must provide the domain in the permissions in manifest.json, if you dont know it use <all_urls>"


add manifest.json
--------------------------------------------
"permissions": ["storage", "alarms", "notifications", "webview"]
--------------------------------------------

-->

--------------------------------------------
"permissions": ["storage", "alarms", "notifications", "webview", "<all_urls>"],
--------------------------------------------



to create  ObjectURL
    ObjectURL hold memory let them go with this command
    
    
Controller.prototype._createObjectURL = function(blob) {
  var objURL = URL.createObjectURL(blob);
  this.objectURLs = this.objectURLs || [];
  this.objectURLs.push(objURL);
  return objURL;
};

Controller.prototype._clearObjectURL = function() {
  if (this.objectURLs) {
    this.objectURLs.forEach(function(objURL) {
      URL.revokeObjectURL(objURL);
    });
    this.objectURLs = null;
  }
};


to realtime parse for imageURL's turn them to images

Controller.prototype._parseForImageURLs = function () {
  // remove old blobs to avoid memory leak:
  this._clearObjectURL();
  var links = this.$todoList.querySelectorAll('a[data-src]:not(.thumbnail)');
  var re = /\.(png|jpg|jpeg|svg|gif)$/;
  for (var i = 0; i<links.length; i++) {
    var url = links[i].getAttribute('data-src');
    if (re.test(url)) {
      links[i].classList.add('thumbnail');
      this._requestRemoteImageAndAppend(url, links[i]);
    }
  }
};


Now call _parseForImageURLs() from showAll(), showActive(), and showCompleted(): and editItem()


add js/controller.js
--------------------------------------------
Controller.prototype.showAll = function () {
this.model.read(function (data) {
//this.$todoList.innerHTML = this.view.show(data);\
this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));
@#@#

Controller.prototype.showActive = function () {
    this.model.read({ completed: 0 }, function (data) {
    this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));

@#@#

  Controller.prototype.showCompleted = function () {
    this.model.read({ completed: 1 }, function (data) {
    this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));

@#@#


    var onSaveHandler = function () {
        var value = input.value.trim();
        var discarding = input.dataset.discard;

      if (value.length && !discarding) {
        this.model.update(id, { title: input.value });

        // Instead of re-rendering the whole view just update
        // this piece of it
        label.innerHTML = this._parseForURLs(value);

@#@#
--------------------------------------------

-->

--------------------------------------------
Controller.prototype.showAll = function () {
this.model.read(function (data) {
//this.$todoList.innerHTML = this.view.show(data);\
this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));
this._parseForImageURLs();
@#@#

Controller.prototype.showActive = function () {
    this.model.read({ completed: 0 }, function (data) {
    this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));
    this._parseForImageURLs();

@#@#

  Controller.prototype.showCompleted = function () {
    this.model.read({ completed: 1 }, function (data) {
    this.$todoList.innerHTML = this._parseForURLs(this.view.show(data));
    this._parseForImageURLs();

@#@#


    var onSaveHandler = function () {
        var value = input.value.trim();
        var discarding = input.dataset.discard;

      if (value.length && !discarding) {
        this.model.update(id, { title: input.value });

        // Instead of re-rendering the whole view just update
        // this piece of it
        label.innerHTML = this._parseForURLs(value);
        this._parseForImageURLs();

@#@#

[anadir]
Controller.prototype._createObjectURL = function(blob) {
    var objURL = URL.createObjectURL(blob);
    this.objectURLs = this.objectURLs || [];
    this.objectURLs.push(objURL);
    return objURL;
};
Controller.prototype._clearObjectURL = function() {
  if (this.objectURLs) {
    this.objectURLs.forEach(function(objURL) {
      URL.revokeObjectURL(objURL);
    });
    this.objectURLs = null;
  }
};

Controller.prototype._parseForImageURLs = function () {
  // remove old blobs to avoid memory leak:
  this._clearObjectURL();
  var links = this.$todoList.querySelectorAll('a[data-src]:not(.thumbnail)');
  var re = /\.(png|jpg|jpeg|svg|gif)$/;
  for (var i = 0; i<links.length; i++) {
    var url = links[i].getAttribute('data-src');
    if (re.test(url)) {
      links[i].classList.add('thumbnail');
      this._requestRemoteImageAndAppend(url, links[i]);
    }
  }
};
--------------------------------------------



bower_components/todomvc-common/base.css
--------------------------------------------
--------------------------------------------

-->

--------------------------------------------
[anadir]
.thumbnail img[data-src] {
  max-width: 100px;
  max-height: 28px;
}
--------------------------------------------



                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Export todos

How to get a reference to a file in the external filesystem.
How to write to the filesystem.


filesystem API permissions
// Read only
"permissions": ["fileSystem"]

// Read and write
"permissions": [{"fileSystem": ["write"]}]

// Read, write, autocomplate previous input, and select folder directories instead of files
"permissions": [{"fileSystem": ["write", "retainEntries", "directory"]}]

manifest.json
--------------------------------------------
"permissions": ["storage", "alarms", "notifications", "webview",
                 "<all_urls>"]
--------------------------------------------

-->

--------------------------------------------
"permissions": ["storage", "alarms", "notifications", "webview",
                 "<all_urls>", { "fileSystem": ["write"] } ],
--------------------------------------------

add index3.html
--------------------------------------------
<footer id="info">
  <button id="toggleAlarm">Activate alarm</button>

  ...
</footer>
--------------------------------------------

-->

--------------------------------------------
<footer id="info">
  <button id="toggleAlarm">Activate alarm</button>
    @#@#
  <button id="exportToDisk">Export to disk</button>
  <div id="status"></div>
    @#@#
  ...
</footer>

[anadir]
<script src="js/export.js"></script>
--------------------------------------------





                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


how to publish yr app and see it in the chrome webstore
https://developer.chrome.com/apps/app_codelab_publish






EXTENSIONS IN DEPTH STUDY
EXTENSIONS IN DEPTH STUDY







                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''



Overview



to access files

Referring to files
An extension's files can be referred to by using a relative URL, just as files in an ordinary HTML page.

  <img src="images/my_image.png">

or

chrome-extension://<extensionID>/<pathToFile>


        unpacked extension id will change when
        
        if the extension is loaded from a different directory
        ID will change again when the extension is packaged.
        extension's code relies on an absolute URL, it can use the chrome.runtime.getURL() method to avoid hardcoding the ID during development.



Architecture

    Background script
        listens for browser events
    
    use the declarative content API to make the icon for the background script availbe to users
    

    Content scirpts
        they modify  web pages
        they communicate with extension parent by using the stroage API

    options page
        customization for the extension



Using Chrome APIs

    webpages and extensions can both open new tabs, but  extensions can choose which tabs with
    tabs.create method

    async methods use callbacks

    sync methods dont


    chrome.browserAction.onClicked.addEventListener  might be what you need


Communication between pages

    they use chrome.extension. once a connection is established they can call fn to manipulate DOM of other pages

    

Saving data and incognito mode


    when a tab is in incognito extension dont have to respect the losing of data
    

    to check a tab is incognito
        function saveTabData(tab) {
          if (tab.incognito) {
            return;
          } else {
            chrome.storage.local.set({data: tab.url});
          }
        }


Manifest File Format


    {
  // Required
  "manifest_version": 2,
  "name": "My Extension",
  "version": "versionString",

  // Recommended
  "default_locale": "en",
  "description": "A plain text description",
  "icons": {...},

  // Pick one (or none)
  "browser_action": {...},
  "page_action": {...},

  // Optional
  "action": ...,
  "author": ...,
  "automation": ...,
  "background": {
    // Recommended
    "persistent": false,
    // Optional
    "service_worker":
  },
  "chrome_settings_overrides": {...},
  "chrome_ui_overrides": {
    "bookmarks_ui": {
      "remove_bookmark_shortcut": true,
      "remove_button": true
    }
  },
  "chrome_url_overrides": {...},
  "commands": {...},
  "content_capabilities": ...,
  "content_scripts": [{...}],
  "content_security_policy": "policyString",
  "converted_from_user_script": ...,
  "current_locale": ...,
  "declarative_net_request": ...,
  "devtools_page": "devtools.html",
  "event_rules": [{...}],
  "externally_connectable": {
    "matches": ["*://*.example.com/*"]
  },
  "file_browser_handlers": [...],
  "file_system_provider_capabilities": {
    "configurable": true,
    "multiple_mounts": true,
    "source": "network"
  },
  "homepage_url": "http://path/to/homepage",
  "import": [{"id": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}],
  "incognito": "spanning, split, or not_allowed",
  "input_components": ...,
  "key": "publicKey",
  "minimum_chrome_version": "versionString",
  "nacl_modules": [...],
  "oauth2": ...,
  "offline_enabled": true,
  "omnibox": {
    "keyword": "aString"
  },
  "optional_permissions": ["tabs"],
  "options_page": "options.html",
  "options_ui": {
    "chrome_style": true,
    "page": "options.html"
  },
  "permissions": ["tabs"],
  "platforms": ...,
  "replacement_web_app": ...,
  "requirements": {...},
  "sandbox": [...],
  "short_name": "Short Name",
  "signature": ...,
  "spellcheck": ...,
  "storage": {
    "managed_schema": "schema.json"
  },
  "system_indicator": ...,
  "tts_engine": {...},
  "update_url": "http://path/to/updateInfo.xml",
  "version_name": "aString",
  "web_accessible_resources": [...]
}

    
Manage Events with Background Scripts

    background pages stay as long as an action is performed also until all visible views and network ports are closed
    
    its a chrome convention that your extension background scripts should have 'persistent' : false
    
    use chrome.runtime.onInstalled to setup your main context once the event has been installed


Initialize the Extension

    use chrome.runtime.onInstalled to initalize
    
    ex
    
      chrome.runtime.onInstalled.addListener(function() {
        chrome.contextMenus.create({
          "id": "sampleContextMenu",
          "title": "Sample Context Menu",
          "contexts": ["selection"]
        });
      });
      
    folder: AE/background.js
        
Set Up Listeners

    make event listeners for your code
    
    to remove extension
    
    chrome.runtime.onMessage.addListener(function(message, sender, reply) {
          chrome.runtime.onMessage.removeListener(event);
      });
      
    chrome wont load the extension background script for the event
    
    do not however add events in nested async
    
    
Filter Events

    
    sometimes you do not want to fire on all times use
    over tabs.onUpdated to filter better (the url object must be the filter
    
      chrome.webNavigation.onCompleted.addListener(function() {
            alert("This is my favorite website!");
        }, {url: [{urlMatches : 'https://www.google.com/'}]});
    
    

React to Listeners

    really act on event data
    
    chrome.runtime.onMessage.addListener(function(message, callback) {
        if (message.data == “setAlarm”) {
             chrome.alarms.create({delayInMinutes: 5})
        } else if (message.data == “runLogic”) {
             chrome.tabs.executeScript({file: 'logic.js'});
        } else if (message.data == “changeColor”) {
             chrome.tabs.executeScript(
                 {code: 'document.body.style.backgroundColor="orange"'});
        };
    });
    
    
            
            
Unload Background Scripts

    to help with sync incase crashes happen
    
        chrome.storage.local.set({variable: variableInformation});
        
    if extensions use message passing ensure all ports are closed like this
    
         runtime.Port.disconnect         method to close
         runtime.Port.onDisconnect       is  the event handler
    
    
    
The lifetime of a background script is when an entry appears and leaves chrome task manager

    they unload on their own, if more listen make data persist
    
    
    
                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Design User Interface



Activate the extension on all pages

    to make the extension work on all browser pages in your manifest
    
    
    {
    "name": "My Awesome browser_action Extension",
    ...
    "browser_action": {
      ...
    }
    ...
    }
  
  
    when the API sees this in the manifest it will add color to the icon that means its availble to users
    

Add a badge
        
    colored banner with 4 letters
    Use badges to indicate the state of the extension
    
    
    chrome.browserAction.setBadgeText({text: 'ON'});
    chrome.browserAction.setBadgeBackgroundColor({color: 'red'});
    
    
    file AE/backgroud.js
    
    
    
Activate the extension on select pages

    to do this
    
    
  {
    "name": "My Awesome page_action Extension",
    ...
    "page_action": {
      ...
    }
    
    /* "browser_action": {
      ...
    } */
    
  }
  
  
    it colorizes when the ext is availble to users else it goes greyscale
    
    
    
this is how you Define rules for activating the extension
        
/* deciding when an extension can be used  */
        
    chrome.runtime.onInstalled.addListener(function() {
    // Replace all rules ...
        chrome.declarativeContent.onPageChanged.removeRules(undefined, function() {
          // With a new rule ...
          chrome.declarativeContent.onPageChanged.addRules([
            {
              // That fires when a page's URL contains a 'g' ...
              conditions: [
                new chrome.declarativeContent.PageStateMatcher({
                  pageUrl: { urlContains: 'g' },
                })
              ],
              // And shows the extension's page action.
              actions: [ new chrome.declarativeContent.ShowPageAction() ]
            }
          ]);
        });
    });
       
       
file: AE/background.js
        



Provide the extension icons


    for page action its a bit different
    
    
    "page_action": {
      "default_icon": {
        "16": "extension_toolbar_icon16.png",
        "32": "extension_toolbar_icon32.png"
      }
    }
    
    this it what the numbers means when u look at the icons object
    
    

Icon Size   	Icon Use
16x16	        favicon on the extension's pages
32x32	        Windows computers often require this size. Providing this option will prevent size distortion from shrinking the 48x48             option.
48x48	        displays on the extensions management page
128x128	        displays on installation and in the Chrome Webstore
    
    resulting in
    
    

  {
    "name": "My Awesome Extension",
    ...
    "icons": {
      "16": "extension_icon16.png",
      "32": "extension_icon32.png",
      "48": "extension_icon48.png",
      "128": "extension_icon128.png"
    }
    ...
  }
  
  
Additional UI Features


    Popup - an html file that cannot use inline JS, remember uorigin extension this is it
        
        looks like this in the manifest can use browser or page action
        
        
        "browser_action": {
          "default_popup": "popup.html"
        }
        
        
        you can also modify popups
        
            
        chrome.storage.local.get('signed_in', function(data) {
            if (data.signed_in) {
              chrome.browserAction.setPopup({popup: 'popup.html'});
            } else {
              chrome.browserAction.setPopup({popup: 'popup_sign_in.html'});
            }
        });
        
    Tooltip
    
        Use a tooltip to give short descriptions or instructions to users when hovering over the browser icon.
        
        to use in manifest
        
        
            "browser_action": {
              "default_title": "Press Ctrl(Win)/Command(Mac)+Shift+Right/Left to flip tabs"
            }
        
    
    
        to modify
        
        
        chrome.browserAction.onClicked.addListener(function(tab) {
            chrome.browserAction.setTitle({tabId: tab.id, title: "You are on tab:" + tab.id});
        });
        
        
        _locales/en/messages.json
        _locales/es/messages.json
        
            makes your extension language friendly
            
            
            {
                "__MSG_tooltip__": {
                    "message": "Hello!",
                    "description": "Tooltip Greeting."
                }
            }
            {
                "__MSG_tooltip__": {
                    "message": "Hola!",
                    "description": "Tooltip Greeting."
                }
            }
            Include the name of the message in the tooltip field instead of the message to enable localization.
            
            {
                "name": "Tab Flipper",
                ...
                "browser_action": {
                  "default_title": "__MSG_tooltip__"
                }
                ...
            }
        
        Omnibox
        
            users can use the omnibox to work with the extension in the manifest do
            
            

                "omnibox": { "keyword" : "nt" },
     
                to react to what the user sent
            
                chrome.omnibox.onInputEntered.addListener(function(text) {
                  // Encode user input for special characters , / ? : @ & = + $ #
                  var newURL = 'https://www.google.com/search?q=' + encodeURIComponent(text);
                  chrome.tabs.create({ url: newURL });
                });
                
            file: AE/background.js
            
            
        Context Menu
        
            you use it by greanting it in the manifest
            
            to actually actiate u need one of the things as defined in the contexts parameter
            
            
                  chrome.contextMenus.create({
                    id: key,
                    title: kLocales[key],
                    type: 'normal',
                    contexts: ['selection',"page", "image", "link"],
                  });
                  
        Commands
        
            Extensions can define specific commands and bind them to a key combination.
            
            in the manifest
                    
            "commands": {
              "flip-tabs-forward": {
                "suggested_key": {
                  "default": "Ctrl+Right",
                  "mac": "Command+Shift+Right"
                },
                "description": "Flip tabs forward"
              },
              "flip-tabs-backwards": {
                "suggested_key": {
                  "default": "Ctrl+Left",
                  "mac": "Command+Shift+Left"
                },
                "description": "Flip tabs backwards"
              }
            }
            
            file AE/background.js
            
        
                to activate the popups doesnt work
                
                            
                  "execute_browser_action": { // or execute_page_action
                    "suggested_key": {
                      "default": "Ctrl+Shift+F",
                      "mac": "MacCtrl+Shift+F"
                    },
                    "description": "Flip tabs backwards"
                  }
                  
                  
                  
    Overrides
                to overide the history, pages or newtab  in the manifest
                
                in each extension you can only override one of the 3
                "chrome_url_overrides" : {
                  "newtab": "override_page.html"
                },
                
                
                
                      ,,ggddY""""Ybbgg,,
                 ,agd""'              `""bg,
              ,gdP"                       "Ybg,
            ,dP"                             "Yb,
          ,dP" l      _,,ddP"""Ybb,,_         "Yb,
         ,8"   l    ,dP"'         `"Yb,         "8,
        ,8'    l  ,d"                 "b, \       `8,
       ,8'     l d"                     "b  -------`8,
       d'      ; d'                       `b       `b
       8       l 8                         8        8
       8        l8                         8        8
       8         8                         8        8
       8         Y,                       ,P        8
       Y,         Ya                     aP        ,P
       `8,         "Ya                 aP"         ,8'
        `8,          "Yb,_         _,dP"          ,8'
         `8a           `""YbbgggddP""'           a8'
          `Yba                      l          adP'
            "Yba                   l         adY"
              `"Yba,              l       ,adP"'
                 `"Y8ba,        l    ,ad8P"'
                      ``""YYbaaadPP""''


Content Scripts

    this is how you access the DOM in the browser domain that is not your extension
    
    
Understand Content Script Capabilities


    they exchange messages with the parent extension and get files from the extension with
    chrome.runtime.getURL()
    
    
    they can access the following API directly and nothing else
    
    
    i18n
    storage
    runtime:
        connect
        getManifest
        getURL
        id
        onConnect
        onMessage
        sendMessage
            
            
Work in Isolated Worlds, they do not conflict with the webpage or additional content scripts
    this means webpages cannot access the content too
    
    
    
Inject Scripts


    Inject Programmatically
        this helps it to run on specific occasions
        
        
        in the manifest
        
        
    {
        "name": "My extension",
        ...
        "permissions": [
          "activeTab","http://*/","https://*/"
        ],
        ...
    }
        
    you need the protocals, so it can run on every
    file: AE/background.js
    
    
    
    Inject Declaratively


        for ones that run on specified pages, must have the matches keyword in the object
        
            "content_scripts": [
                {
                 "matches": ["http://*.nytimes.com/*"],
                 "css": ["css/myStyles.css"],
                 "js": ["js/contentScript.js"]
                }
            ],
            
        files: css/myStyles.css
                js/contentScript.js
            
            
    this is it json schema  table
    
    
    
matches	                array of strings        Required. Specifies which pages this content script will be injected into.
                                                See Match Patterns for more details on the syntax of these strings and
                                                Match patterns and globs for information on how to exclude URLs.
                                            
css	        	        array of strings        Optional. The list of CSS files to be injected into matching pages.
                                                These are injected in the order they appear in this array,
                                                before any DOM is constructed or displayed for the page.
                                                
js	                    array of strings        Optional. The list of JavaScript files to be injected into matching pages.
                                                These are injected in the order they appear in this array.
                                            
match_about_blank	            boolean         Optional. Whether the script should inject into an about:blank
                                                frame where the parent or opener frame matches one of the patterns declared
                                                in matches. Defaults to false.
                                                    
                                                    
exclude_matches	        array of strings        Optional. Excludes pages that this content script would otherwise be injected into                                                . See Match Patterns for more details on the syntax of these strings.

include_globs	        array of strings	    Optional. Applied after matches to include only those URLs that also match this glob.                                             Intended to emulate the @include Greasemonkey keyword.

exclude_globs	        array of string	        Optional. Applied after matches to exclude URLs that match this glob. Intended to                                                 emulate the @exclude Greasemonkey keyword.


' to inject  the content script into http://www.nytimes.com/ health but not into http://www.nytimes.com/business .'



  "content_scripts": [
    {
      "matches": ["http://*.nytimes.com/*"],
      "exclude_matches": ["*://*/*business*"],
      "js": ["contentScript.js"]
    }
  ],
  
  
`globs are a different form of URL regex


the glob "http://???.example.com/foo/*" matches

http:// www .example.com/foo /bar
http:// the .example.com/foo /

no match

http:// my .example.com/foo/bar
http:// example .com/foo/
http://www.example.com/foo`


the glob "*nytimes.com/???s/*"

match
 http:/www.nytimes.com/arts/index.html
 http://www.nytimes.com/jobs/index.html
 
 
 does not match
 
 http://www.nytimes.com/ sports /index.html
 
the glob "*science*"
 
    match
    
    http://history.nytimes.com
    http://.nytimes.com/history
    
    does not match
    
    http:// science .nytimes.com
    http://www.nytimes.com/ science
 
 to use in the manifest
 
    "content_scripts": [
        {
          "matches": ["http://*.nytimes.com/*"],
          "include_globs": [[YOUR GLOB HERE]],
          "exclude_globs": [[YOUR GLOB HERE]],
          "js": ["contentScript.js"]
        }
    ],
    
    
    you use of matches,exclude_matches,include_globs,exclude_globs to achieve the correct scope
    
    
    
Run Time

    this controlls when js is injected into the run in field
    
    use the run_at key in the manifest
    default is document_idle , values are document_start, document_end
    its best to use document_idle
    
      "content_scripts": [
        {
          "matches": ["http://*.nytimes.com/*"],
          "run_at": "document_idle",
          "js": ["contentScript.js"]
        }
      ],
      
      document_idle - browser chooses a time between window.onload and window.end
      document_start - Scripts are injected after any files from css, but before any  DOM is constructed or any  script is run.
      document_end - right after DOM finishes, but before any  subresources, or XHR
      
      
Specify frames
    controlls whether content scripts go in all frames or just top most frame
    use keyword all_frames in the manifest
    if false top frame is matched, true it will inject every frame instead of child frame if URL requirements are not met
    
  "content_scripts": [
    {
      "matches": ["http://*.nytimes.com/*"],
      "all_frames": true,
      "js": ["contentScript.js"]
    }
  ],
    
    
      
      
Communication with the embedding page
    
    the webpage cannot touch the contentScript by default but it can talk to it this is how
    
    
in homepage.html

document.getElementById("theButton").addEventListener("click",
    function() {
  window.postMessage({ type: "FROM_PAGE", text: "Hello from the webpage!" }, "*");
}, false);


in contentScript.js

var port = chrome.runtime.connect();

window.addEventListener("message", function(event) {
  // We only accept messages from ourselves
  if (event.source != window)
    return;

  if (event.data.type && (event.data.type == "FROM_PAGE")) {
    console.log("Content script received: " + event.data.text);
    port.postMessage(event.data.text);
  }
}, false);


in background.js



files

Plotly/animations.html
css/myStyles.css
js/background.js
js/logic.js


The non-extension page, example.html, posts messages to itself. This message is intercepted and inspected by the content script and then posted to the extension process. In this way, the page establishes a line of communication to the extension process. The reverse is possible through similar means.

Stay Secure